Terraform with GIT & AWS
*This sample creates an EC2 Instance using terraform cloud and GIT repository 


1. Pre-reqs
    1. In your Terraform 
        1. Create an account and organization 
    2. In your AWS account
        1. Make sure have a user with EC2 full access.
        2. Make sure that there is a default VPC in the region.
            1. If not Go to your VPCs -> uncheck all vpcs -> click action -> click create default VPC.
    3. In your GitHub account
    4. Fork the below repo into your own account by hitting the fork button in top right 
        1. https://github.com/hashicorp/tfc-guide-example
        2. Reop will be called tfc-guide-example 
            1. Go to tfc-guide-example under your repo -> go into variables.tf file and change region default value to “us-east-2” 
2. Create a workspace in terraform
    1. Click workspaces tab -> create new one
    2. Link git account.  
        1. May need to disable popup until step is done
        2. Click version control -> GitHub -> you account ->  “repo that was forked in the previous step” -> create workspace
    3. Create and use a variable set
        1. Click Setting (at top) -> Variable sets -> Create variable set
        2. Name “AWS Credentials”
        3. Select a specific workspace 
        4. Click add variable -> Environment variable
        5. Set key to AWS_ACCESS_KEY_ID and the value to your AWS Access Key ID (in AWS setting under security & credentials). -> set value to your actual AWS_ACCCESS_KEY_ID value  -> Mark it as Sensitive -> click Save variable.
        6. Click +Add Variable. -> Environment variable.  -> Set the key to AWS_ACCESS_KEY_ID and the value to your AWS Access Key ID. Mark it as Sensitive -> click Save variable. 
            1. Note if you do not have may need to just generate a new AWS_ACCESS_KEY_ID and change previous value. -> I went into my LawrenceG (has admin access & EC@ full access) user and create a new one.
        7. Click create variable set.
3. Create Infrastructure in terraform
    1. Configure workspace variables 
        1. Go to your workspace -> variable -> add variable 
            1. Click terraform variable -> Set Key = instance_type ->  value = t2.micro -> save
        2. Click add variable again
            1. Click terraform variable -> Set key = instance_name -> value = Provisioned by Terraform -> click save
4. Plan infrastructure changes (Run plan to create EC2 instance using terraform cloud)
    1. Click actions -> Start new plan ->  select plan (most common) -> start plan
    2. Click confirm & apply -> Confirm plan
5. Change infrastructure
    1. 2 ways
    2. Modify through VCS
        1. Verify that your workspace has speculative plans enabled. 
            1. Under the Settings tab -> click Version Control -> Set Automatic speculative plans to enabled -> click Update VCS settings.
        2. Go to your forked tfc-guide-example repo in GitHub -> Click on the Pull Requests tab -> then click New pull request button to create a pull request.
        3. Set the base repository to your fork of the tfc-guide-example repo (not the fork in the HashiCorp organization) -> set the base branch to the main/master branch -> Set the the compare branch to add_tag.
        4. Create the pull request
        5. View speculative plane through Terraform
            1. Click details link  the checks portion of the pull request in GitHub
            2. Go back to the GitHub page when you are done reviewing.
            3. Click “Merge pull request” -> “Confirm pull request” 
            4. Go back to the run tab in your terraform workspace -> confirm and apply the changes.
            5. Go to the EC2 instance and verify that the tag was added.
    3. Modify through updating variables (Terraform Cloud web UI)
        1. In your workspace in terraforms -> click variables -> change instance_name from “Provisioned by Terraform” to “Updated by Terraform” -> click the save button. 
        2. Click actions -> Start new plan ->  select plan (most common) -> start plan
        3. Click confirm & apply -> Confirm plan
        4. Confirm that change was made in AWS.


More about variables in terraform cloud 
https://www.terraform.io/cloud-docs/workspaces/variables

